version: 2.1
orbs:
  anchore: anchore/anchore-engine@1.2.0
jobs:
  "fdk":
    docker:
      - image: circleci/golang:1.12.4
    working_directory: ~/fdk-go
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker version
      - run: docker pull fnproject/fnserver
      # installing Fn CLI and starting the Fn server
      - run:
          command: go test -v ./...
      - run:
          command: |
            curl -LSs https://raw.githubusercontent.com/fnproject/cli/master/install | sh
#      - run:
#          command: fn build
#          working_directory: examples/hello
#      - run:
#          command: docker build -t fnproject/fdk-go-init .
#          working_directory: images/init
#      - run:
#          command: docker build -t fnproject/fdk-go-build .
#          working_directory: images/build
#      - run:
#          command: docker build -t fnproject/fdk-go-runtime .
#          working_directory: images/runtime
      - deploy:
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" && -z "${CIRCLE_PR_REPONAME}" ]]; then
              func_version=$(awk '/^version:/ { print $2; }' func.yaml)
              printenv DOCKER_PASS | docker login -u ${DOCKER_USER} --password-stdin
              git config --global user.email "ci@fnproject.com"
              git config --global user.name "CI"
              git branch --set-upstream-to=origin/${CIRCLE_BRANCH} ${CIRCLE_BRANCH}
#              docker tag "hello:${func_version}" "fnproject/fdk-go-hello:${func_version}"
#              docker tag "hello:${func_version}" "fnproject/fdk-go-hello:latest"
#              docker push "fnproject/fdk-go-hello:${func_version}"
#              docker push "fnproject/fdk-go-hello:latest"
            fi
          #working_directory: examples/hello

  "go1.12.4_security_check":
    executor: anchore/anchore_engine
    working_directory: ~/fdk-go
    steps:
      - checkout
      - run:
          name: Golang 1.12.4 Stretch build
          command: |
            ./build-images.sh 1.12.4 stretch
      - anchore/analyze_local_image:
          image_name: fnproject/golang:1.12.4-stretch
          timeout: '500'
          policy_failure: true
          policy_bundle_file_path: ~/fdk-go/.circleci/.anchore/policy_bundle.json
      - anchore/parse_reports

workflows:
  version: 2
  build:
    jobs:
      - "fdk"
      - "python36dev_security_check"
      - "python36runtime_security_check"
      - "python371dev_security_check"
      - "python371runtime_security_check"
